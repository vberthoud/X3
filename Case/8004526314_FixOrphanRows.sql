BEGIN TRAN
BEGIN TRY
	-- Create backup tables
	SELECT * INTO DEMO.ZSORDERP_BACK FROM DEMO.SORDERP WHERE 1=2
	ALTER TABLE DEMO.ZSORDERP_BACK DROP COLUMN ROWID
	ALTER TABLE DEMO.ZSORDERP_BACK ADD ROWID INT NOT NULL
	
	SELECT * INTO DEMO.ZSORDER_BACK FROM DEMO.SORDER WHERE 1=2
	ALTER TABLE DEMO.ZSORDER_BACK DROP COLUMN ROWID
	ALTER TABLE DEMO.ZSORDER_BACK ADD ROWID INT NOT NULL
	
	SELECT * INTO DEMO.ZSORDERQ_BACK FROM DEMO.SORDERQ WHERE 1=2
	ALTER TABLE DEMO.ZSORDERQ_BACK DROP COLUMN ROWID
	ALTER TABLE DEMO.ZSORDERQ_BACK ADD ROWID INT NOT NULL


	SELECT * INTO DEMO.ZCPTANALIN_BACK FROM DEMO.CPTANALIN WHERE 1=2
	ALTER TABLE DEMO.ZCPTANALIN_BACK DROP COLUMN ROWID
	ALTER TABLE DEMO.ZCPTANALIN_BACK ADD ROWID INT NOT NULL

	SELECT * INTO DEMO.ZPORDERP_BACK FROM DEMO.PORDERP WHERE 1=2
	ALTER TABLE DEMO.ZPORDERP_BACK DROP COLUMN ROWID
	ALTER TABLE DEMO.ZPORDERP_BACK ADD ROWID INT NOT NULL
	
	SELECT * INTO DEMO.ZPORDER_BACK FROM DEMO.PORDER WHERE 1=2
	ALTER TABLE DEMO.ZPORDER_BACK DROP COLUMN ROWID
	ALTER TABLE DEMO.ZPORDER_BACK ADD ROWID INT NOT NULL
	
	SELECT * INTO DEMO.ZPORDERQ_BACK FROM DEMO.PORDERQ WHERE 1=2
	ALTER TABLE DEMO.ZPORDERQ_BACK DROP COLUMN ROWID
	ALTER TABLE DEMO.ZPORDERQ_BACK ADD ROWID INT NOT NULL

	--SELECT * INTO DEMO.ZSORDERC_BACK WHERE 1=2

	-- 1. Delete SORDERP where missing SORDER
	
	INSERT INTO DEMO.ZSORDERP_BACK
	SELECT * 
	FROM DEMO.SORDERP p 
	WHERE 
		p.SOHCAT_0<4
		AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDER s WHERE s.SOHNUM_0=p.SOHNUM_0)
	
	DELETE DEMO.SORDERP 
	FROM DEMO.SORDERP p
	WHERE 
		p.SOHCAT_0<4
		AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDER s WHERE s.SOHNUM_0=p.SOHNUM_0)
	
	-- 2. DELETE SORDERQ where missing SORDER
	INSERT INTO DEMO.ZSORDERQ_BACK
	SELECT * 
	FROM DEMO.SORDERQ p 
	WHERE 
		p.SOHCAT_0<4
		AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDER s WHERE s.SOHNUM_0=p.SOHNUM_0)

	DELETE DEMO.SORDERQ 
	FROM DEMO.SORDERQ q
		WHERE q.SOHCAT_0<4
		AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDER s WHERE s.SOHNUM_0=q.SOHNUM_0)

	-- 3. DELETE SORDERP where missing SORDERQ - leave SORDERQ with records that only have SORDERP matches / line level
	INSERT INTO DEMO.ZSORDERP_BACK
	SELECT * 
	FROM DEMO.SORDERP p 
	WHERE p.SOHCAT_0<4
	AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDERQ q WHERE q.SOHNUM_0=p.SOHNUM_0 AND q.SOPLIN_0=p.SOPLIN_0 AND q.SOQSEQ_0=p.SOPSEQ_0)

	DELETE DEMO.SORDERP 
	FROM DEMO.SORDERP p
	WHERE p.SOHCAT_0<4
	AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDERQ q WHERE q.SOHNUM_0=p.SOHNUM_0 AND q.SOPLIN_0=p.SOPLIN_0 AND q.SOQSEQ_0=p.SOPSEQ_0)

	-- 4. DELETE SORDERQ where missing SORDERP - leave SORDERP with records that only have SORDERQ matches
	INSERT INTO DEMO.ZSORDERQ_BACK
	SELECT * 
	FROM DEMO.SORDERQ q 
	WHERE q.SOHCAT_0<4
	AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDERP p WHERE q.SOHNUM_0=p.SOHNUM_0 AND q.SOPLIN_0=p.SOPLIN_0 AND q.SOQSEQ_0=p.SOPSEQ_0)

	DELETE DEMO.SORDERQ 
	FROM DEMO.SORDERQ q
	WHERE q.SOHCAT_0<4
	AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDERP p WHERE q.SOHNUM_0=p.SOHNUM_0 AND q.SOPLIN_0=p.SOPLIN_0 AND q.SOQSEQ_0=p.SOPSEQ_0)


	-- 5. DELETE CPTANALIN where missing SORDERP
	INSERT INTO DEMO.ZCPTANALIN_BACK
	SELECT * 
	FROM DEMO.CPTANALIN A 
	WHERE ABRFIC_0 = 'SOP' 
		AND NOT EXISTS 
		(
			SELECT 'X' 
			FROM DEMO.SORDERP P 
			WHERE 
				P.SOHNUM_0=A.VCRNUM_0 
				AND P.SOPLIN_0=A.VCRLIN_0 
				AND P.SOPSEQ_0 =A.VCRSEQ_0
		)
	
	DELETE DEMO.CPTANALIN
	FROM DEMO.CPTANALIN A
	WHERE ABRFIC_0 = 'SOP' 
		AND NOT EXISTS 
		(
			SELECT 'X' 
			FROM DEMO.SORDERP P 
			WHERE 
				P.SOHNUM_0=A.VCRNUM_0 
				AND P.SOPLIN_0=A.VCRLIN_0 
				AND P.SOPSEQ_0 =A.VCRSEQ_0
		)

	-- 6. SORDER with missing SORDERP 
	INSERT INTO DEMO.ZSORDER_BACK
	SELECT *
	FROM DEMO.SORDER s
	WHERE s.SOHCAT_0 <4
			AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDERP p WHERE s.SOHNUM_0=p.SOHNUM_0)
			
	DELETE DEMO.SORDER
	FROM DEMO.SORDER s
	WHERE s.SOHCAT_0 <4
			AND NOT EXISTS (SELECT 'X' FROM DEMO.SORDERP p WHERE s.SOHNUM_0=p.SOHNUM_0)


	-- 7. Delete PORDERP where missing PORDER
	
	INSERT INTO DEMO.ZPORDERP_BACK
	SELECT * 
	FROM DEMO.PORDERP p 
	WHERE 
		p.POHTYP_0=1
		AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDER s WHERE s.POHNUM_0=p.POHNUM_0)
	
	DELETE DEMO.PORDERP 
	FROM DEMO.PORDERP p
	WHERE 
		p.POHTYP_0=1
		AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDER s WHERE s.POHNUM_0=p.POHNUM_0)
	
	-- 8. DELETE PORDERQ where missing PORDER
	INSERT INTO DEMO.ZPORDERQ_BACK
	SELECT * 
	FROM DEMO.PORDERQ p 
	WHERE 
		p.POHTYP_0=1
		AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDER s WHERE s.POHNUM_0=p.POHNUM_0)

	DELETE DEMO.PORDERQ 
	FROM DEMO.PORDERQ q
		WHERE q.POHTYP_0=1
		AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDER s WHERE s.POHNUM_0=q.POHNUM_0)

/*
	-- 9. DELETE PORDERP where missing PORDERQ - leave PORDERQ with records that only have PORDERP matches / line level
	INSERT INTO DEMO.ZPORDERP_BACK
	SELECT * 
	FROM DEMO.PORDERP p 
	WHERE p.POHTYP_0=1
	AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDERQ q WHERE q.POHNUM_0=p.POHNUM_0 AND q.POPLIN_0=p.POPLIN_0 AND q.POQSEQ_0=p.POPSEQ_0)

	DELETE DEMO.PORDERP 
	FROM DEMO.PORDERP p
	WHERE p.POHTYP_0=1
	AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDERQ q WHERE q.POHNUM_0=p.POHNUM_0 AND q.POPLIN_0=p.POPLIN_0 AND q.POQSEQ_0=p.POPSEQ_0)

	-- 10. DELETE PORDERQ where missing PORDERP - leave PORDERP with records that only have PORDERQ matches
	INSERT INTO DEMO.ZPORDERQ_BACK
	SELECT * 
	FROM DEMO.PORDERQ q 
	WHERE q.POHTYP_0=1
	AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDERP p WHERE q.POHNUM_0=p.POHNUM_0 AND q.POPLIN_0=p.POPLIN_0 AND q.POQSEQ_0=p.POPSEQ_0)

	DELETE DEMO.PORDERQ 
	FROM DEMO.PORDERQ q
	WHERE q.POHTYP_0=1
	AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDERP p WHERE q.POHNUM_0=p.POHNUM_0 AND q.POPLIN_0=p.POPLIN_0 AND q.POQSEQ_0=p.POPSEQ_0)

*/
	-- 11. DELETE CPTANALIN where missing PORDERP
	INSERT INTO DEMO.ZCPTANALIN_BACK
	SELECT * 
	FROM DEMO.CPTANALIN A 
	WHERE ABRFIC_0 = 'POP' 
		AND NOT EXISTS 
		(
			SELECT 'X' 
			FROM DEMO.PORDERP P 
			WHERE 
				P.POHNUM_0=A.VCRNUM_0 
				AND P.POPLIN_0=A.VCRLIN_0 
				AND P.POPSEQ_0 =A.VCRSEQ_0
		)
	
	DELETE DEMO.CPTANALIN
	FROM DEMO.CPTANALIN A
	WHERE ABRFIC_0 = 'POP' 
		AND NOT EXISTS 
		(
			SELECT 'X' 
			FROM DEMO.PORDERP P 
			WHERE 
				P.POHNUM_0=A.VCRNUM_0 
				AND P.POPLIN_0=A.VCRLIN_0 
				AND P.POPSEQ_0 =A.VCRSEQ_0
		)

	-- 12. PORDER with missing PORDERP 
	INSERT INTO DEMO.ZPORDER_BACK
	SELECT *
	FROM DEMO.PORDER s
	WHERE s.POHTYP_0=1
			AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDERP p WHERE s.POHNUM_0=p.POHNUM_0)
			
	DELETE DEMO.PORDER
	FROM DEMO.PORDER s
	WHERE s.POHTYP_0=1
			AND NOT EXISTS (SELECT 'X' FROM DEMO.PORDERP p WHERE s.POHNUM_0=p.POHNUM_0)





/*

	/*** Delete records inside CPTANALIN that don't exist for SORDER ***/
	SELECT *
	INTO DEMO.ZCPTANALIN_BAK
	FROM DEMO.CPTANALIN cpt WITH(NOLOCK)
		LEFT JOIN DEMO.SORDER soh
			ON cpt.VCRNUM_0 = soh.SOHNUM_0
	WHERE 
		soh.SOHNUM_0 IS NULL 
		--AND cpt.VCRNUM_0 LIKE @cptMask 
		AND cpt.ABRFIC_0 = 'SOP'


	DELETE DEMO.CPTANALIN 
	FROM DEMO.CPTANALIN AS cpt
		LEFT JOIN DEMO.SORDER soh
			ON cpt.VCRNUM_0 = soh.SOHNUM_0
	WHERE 
		soh.SOHNUM_0 IS NULL 
		AND cpt.ABRFIC_0 = 'SOP'

	SET @rowcount = @@ROWCOUNT
	PRINT CONVERT(VARCHAR(MAX), @rowcount) + ' rows deleted from DEMO.CPTANALIN'
	SET @rowcount = 0






	/*** Delete records inside SORDERP that don't exist for SORDER ***/
	SELECT *
	INTO DEMO.ZSORDERP_BAK
	FROM DEMO.SORDERP sop
		LEFT JOIN DEMO.SORDER soh
			ON sop.SOHNUM_0 = soh.SOHNUM_0
	WHERE soh.SOHNUM_0 IS NULL

	DELETE DEMO.SORDERP
	FROM DEMO.SORDERP sop
		LEFT JOIN DEMO.SORDER soh
			ON sop.SOHNUM_0 = soh.SOHNUM_0
	WHERE soh.SOHNUM_0 IS NULL

	SET @rowcount = @@ROWCOUNT
	PRINT CONVERT(VARCHAR(MAX), @rowcount) + ' rows deleted from DEMO.SORDERP'
	SET @rowcount = 0

	-- Delete records inside SORDERQ that don't exist within SORDER
	INSERT INTO dbo.ZDeleteLog(TableName,RowID,KeyValue, DeleteDate)
	SELECT 
		'SORDERQ', 
		soq.ROWID, 
		soq.SOHNUM_0 + '-' + 
			CONVERT(VARCHAR(MAX),soq.SOPLIN_0)+ '-' + 
			CONVERT(VARCHAR(MAX),soq.SOQSEQ_0),
		GETDATE()
	FROM DEMO.SORDERQ soq
		LEFT JOIN DEMO.SORDER soh
			ON soq.SOHNUM_0 = soh.SOHNUM_0
	WHERE soh.SOHNUM_0 IS NULL

	DELETE DEMO.SORDERQ
	FROM DEMO.SORDERQ soq
		LEFT JOIN DEMO.SORDER soh
			ON soq.SOHNUM_0 = soh.SOHNUM_0
	WHERE soh.SOHNUM_0 IS NULL

	SET @rowcount = @@ROWCOUNT
	PRINT CONVERT(VARCHAR(MAX), @rowcount) + ' rows deleted from DEMO.SORDERQ'
	SET @rowcount = 0


	-- Delete records that exist in SORDERC that don't exist within SORDERC
	INSERT INTO dbo.ZDeleteLog(TableName,RowID,KeyValue, DeleteDate)
	SELECT 
		'SORDERQ', 
		soc.ROWID, 
		soc.SOHNUM_0 + '-' + 
			CONVERT(VARCHAR(MAX),soc.SOPLIN_0),
		GETDATE()
	FROM DEMO.SORDERC soc
		LEFT JOIN DEMO.SORDER soh
			ON soc.SOHNUM_0 = soh.SOHNUM_0
	WHERE soh.SOHNUM_0 IS NULL

	DELETE DEMO.SORDERC
	FROM DEMO.SORDERC soc
		LEFT JOIN DEMO.SORDER soh
			ON soc.SOHNUM_0 = soh.SOHNUM_0
	WHERE soh.SOHNUM_0 IS NULL
	
	SET @rowcount = @@ROWCOUNT
	PRINT CONVERT(VARCHAR(MAX), @rowcount) + ' rows deleted from DEMO.SORDERC'
	SET @rowcount = 0

	-- Check log of records that were deleted
	SELECT * FROM dbo.ZDeleteLog
*/




END TRY

BEGIN CATCH
	SELECT	ERROR_NUMBER()		AS ErrorNumber,
			ERROR_SEVERITY()	AS ErrorSeverity,
			ERROR_STATE()		AS ErrorState,
			ERROR_PROCEDURE()	AS ErrorProcedure,
			ERROR_LINE()		AS ErrorLine,
			ERROR_MESSAGE()		AS ErrorMessage

	IF @@TRANCOUNT > 0
	BEGIN
		ROLLBACK TRANSACTION
	END
END CATCH



-- Finally commit 
IF @@TRANCOUNT > 0
BEGIN
	COMMIT TRAN
END
